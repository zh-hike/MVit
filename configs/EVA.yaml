# global configs
Global:
  checkpoints: null
  pretrained_model: null
  output_dir: ./output/all_dataset_save_interval1
  device: gpu
  save_interval: 1
  eval_during_train: True
  eval_interval: 1
  epochs: 100
  print_batch_step: 20
  use_visualdl: False
  eval_mode: retrieval
  retrieval_feature_from: features # 'backbone' or 'features'
  re_ranking: False
  use_dali: False
  # used for static mode and model export
  image_shape: [3, 224, 224]
  save_inference_dir: ./inference

AMP:
  scale_loss: 65536
  use_dynamic_loss_scaling: True
  # O1: mixed fp16
  level: O1

# model architecture
Arch:
  name: MVit
  model_name: EVA
  Block:
    add_mul_gamma_to_msa_mlp: true
    Attention:
      add_relative_position_bias_in_msa: true
      add_rel_pos_bias_in_msa: true


# loss function config for traing/eval process
Loss:
  Train:
    - CELoss:
        weight: 1.0
        epsilon: 0.1
    - TripletAngularMarginLoss:
        weight: 1.0
        feature_from: features
        margin: 0.5
        reduction: mean
        add_absolute: True
        absolute_loss_weight: 0.1
        normalize_feature: True
        ap_value: 0.8
        an_value: 0.4
  Eval:
    - CELoss:
        weight: 1.0

Optimizer:
  name: Momentum
  momentum: 0.9
  lr:
    name: Cosine
    learning_rate: 0.48 # for 8gpu x 256bs
    warmup_epoch: 5
  regularizer:
    name: L2
    coeff: 0.00001

# data loader for train and eval
DataLoader:
  Train:
    dataset:
      name: ImageNetDataset
      image_root: /workspace/dongshuilong/dataset/ppshitu_traindata/
      cls_label_path: /yunpan/dataset/ppshitu_traindata/train_reg_all_data_v2_no_overlapping.txt
      relabel: True
      transform_ops:
        - DecodeImage:
            to_rgb: True
            channel_first: False
        - ResizeImage:
            size: [224, 224]
            return_numpy: False
            interpolation: bilinear
            backend: cv2
        - RandFlipImage:
            flip_code: 1
        - Pad:
            padding: 10
            backend: cv2
        - RandCropImageV2:
            size: [224, 224]
        - RandomRotation:
            prob: 0.5
            degrees: 90
            interpolation: bilinear
        - ResizeImage:
            size: [224, 224]
            return_numpy: False
            interpolation: bilinear
            backend: cv2
        - NormalizeImage:
            scale: 1.0/255.0
            mean: [0.485, 0.456, 0.406]
            std: [0.229, 0.224, 0.225]
            order: hwc
    sampler:
      name: PKSampler
      batch_size: 256
      sample_per_id: 4
      drop_last: False
      shuffle: True
      sample_method: "id_avg_prob"
      id_list: [50030, 80700, 92019, 96015] # be careful when set relabel=True
      ratio: [4, 4]
    loader:
      num_workers: 12
      use_shared_memory: True

  Eval:
    Query:
      dataset:
        name: VeriWild
        image_root: /workspace/dongshuilong/dataset/ppshitu_traindata/Aliproduct/
        cls_label_path: /workspace/dongshuilong/dataset/ppshitu_traindata/Aliproduct/val_list.txt
        transform_ops:
          - DecodeImage:
              to_rgb: True
              channel_first: False
          - ResizeImage:
              size: [224, 224]
              return_numpy: False
              interpolation: bilinear
              backend: cv2
          - NormalizeImage:
              scale: 1.0/255.0
              mean: [0.485, 0.456, 0.406]
              std: [0.229, 0.224, 0.225]
              order: hwc
      sampler:
        name: DistributedBatchSampler
        batch_size: 256
        drop_last: False
        shuffle: False
      loader:
        num_workers: 8
        use_shared_memory: True

    # Gallery:
    #   dataset:
    #     name: VeriWild
    #     image_root: /workspace/dongshuilong/dataset/ppshitu_traindata/Aliproduct/
    #     cls_label_path: /workspace/dongshuilong/dataset/ppshitu_traindata/Aliproduct/val_list.txt
    #     transform_ops:
    #       - DecodeImage:
    #           to_rgb: True
    #           channel_first: False
    #       - ResizeImage:
    #           size: [224, 224]
    #           return_numpy: False
    #           interpolation: bilinear
    #           backend: cv2
    #       - NormalizeImage:
    #           scale: 1.0/255.0
    #           mean: [0.485, 0.456, 0.406]
    #           std: [0.229, 0.224, 0.225]
    #           order: hwc
    #   sampler:
    #     name: DistributedBatchSampler
    #     batch_size: 256
    #     drop_last: False
    #     shuffle: False
    #   loader:
    #     num_workers: 4
    #     use_shared_memory: True

Metric:
  Eval:
    - Recallk:
        topk: [1, 5]
    - mAP: {}
